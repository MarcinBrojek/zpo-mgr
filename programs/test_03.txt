@syntax(sp){sp: n | string | /i/ n | /s/ string | "(" sp "+" sp ")" | t}
@syntax(t){t: /unit/ | /t_dot/}
@syntax(n){n: I}
@syntax(string){string: STR}

is_string(`@string` | `@string_1`)`
string_1 = list(["\"" + str(isinstance(string[0], str)) + "\""])
`

is_int(`@n_1` | `@string_1`)`
string_1 = list(["\"" + str(isinstance(n_1[0], int)) + "\""])
`

@typing(t1){
    is_int(`@n` | `"True"`)
    ---
    @G |- `i@n` : `unit`
}

@typing(t2){
    is_string(`@string` | `"True"`)
    ---
    @G |- `s@string` : `unit`
}

@typing(t3){
    is_int(`@n_1` | `"True"`)
    is_int(`@n_2` | `"True"`)
    ---
    @G |- `(i@n_1 + i@n_2)` : `t_dot`
}

@typing(t4){
    is_string(`@string_1` | `"True"`)
    is_string(`@string_2` | `"True"`)
    ---
    @G |- `(s@string_1 + s@string_2)` : `t_dot`
}

@typing(t5){
    @G |- `@sp_1` : `t_dot`
    ---
    @G |- `(@sp_1 + @sp_2)` : `t_dot`
}

@typing(t6){
    @G |- `@sp_2` : `t_dot`
    ---
    @G |- `(@sp_1 + @sp_2)` : `t_dot`
}

@typing(t7){
    @G |- `@sp` : `t_dot`
    ---
    @G |- `@sp` : `unit`
}


@semantics(oe1){
    <`@sp_1`, @s> => <`@sp_3`, @s>
    ---
    <`(@sp_1 + @sp_2)`, @s> => <`(@sp_3 + @sp_2)`, @s>
}

@semantics(oe2){
    <`@sp_2`, @s> => <`@sp_3`, @s>
    ---
    <`(@sp_1 + @sp_2)`, @s> => <`(@sp_1 + @sp_3)`, @s>
}

string_to_string(`s@string_1`, `s@string_2` | `s@string_3`)`
string_3 = list(["\"" + str(int(string_1[0][1:-1]) + int(string_2[0][1:-1])) + "\""])
`

string_to_int(`s@string_1`, `s@string_2` | `i@n_3`)`
n_3 = list([int(string_1[0][1:-1]) + int(string_2[0][1:-1])])
`

int_to_string(`i@n_1`, `i@n_2` | `s@string_3`)`
string_3 = list(["\"" + str((n_1[0] + n_2[0])) + "\""])
`

int_to_int(`i@n_1`, `i@n_2` | `i@n_3`)`
n_3 = list([n_1[0] + n_2[0]])
`

@semantics(oe3){
    string_to_string(`s@string_1`, `s@string_2` | `s@string_3`)
    ---
    <`(s@string_1 + s@string_2)`, @s> => <`s@string_3`, @s>
}

@semantics(oe4){
    string_to_int(`s@string_1`, `s@string_2` | `i@n_3`)
    ---
    <`(s@string_1 + s@string_2)`, @s> => <`i@n_3`, @s>
}

@semantics(oe5){
    int_to_string(`i@n_1`, `i@n_2` | `s@string_3`)
    ---
    <`(i@n_1 + i@n_2)`, @s> => <`s@string_3`, @s>
}

@semantics(oe6){
    int_to_int(`i@n_1`, `i@n_2` | `i@n_3`)
    ---
    <`(i@n_1 + i@n_2)`, @s> => <`i@n_3`, @s>
}

s_end(@s_1, `@n` | @s_2)`
s_2 = n
`

s_end(@s_1, `@string` | @s_2)`
s_2 = string
`

@semantics(oe7){
    s_end(@s_1, `@n` | @s_2)
    ---
    <`i@n`, @s_1> => @s_2
}

@semantics(oe8){
    s_end(@s_1, `@string` | @s_2)
    ---
    <`s@string`, @s_1> => @s_2
}

@code`(i5 + (s"10" + s"5"))`
