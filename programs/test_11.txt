@syntax(sp){sp: /unit/}
@syntax(e){e: /0/ | /s/ "(" e ")" | e /\+/ e}

@typing(te1){
    ---
    @G |- e`@e` : sp`unit`
}

@semantics(oe1){
    ---
    <e`@e_1 + s(@e_2)`, @s> => <e`s(@e_1) + @e_2`, @s>
}

@semantics(oe2){
    ---
    <e`@e_1 + 0`, @s> => <e`@e_1`, @s>
}

@semantics(oe3){
    <e`@e_1`, @s> => <e`@e_3`, @s>
    ---
    <e`@e_1 + @e_2`, @s> => <e`@e_3 + @e_2`, @s>
}

@semantics(oe4){
    <e`@e_2`, @s> => <e`@e_3`, @s>
    ---
    <e`@e_1 + @e_2`, @s> => <e`@e_1 + @e_3`, @s>
}

update(e`s(@e)`, @s_1 | e`@e`, @s_2)`
s_2 = s_1
if type(s_2[1]) != int:
    s_2[1] = 1
else:
    s_2[1] += 1
`
@semantics(transferOneToken){
    update(e`@e_1`, @s_1 | e`@e_2`, @s_2)
    ---
    <e`@e_1`, @s_1> => <e`@e_2`, @s_2>
}

@semantics(end){
    ---
    <e`0`, @s> => @s
}

@code e`s(s(0)) + s(0) + 0 + s(0)`
@code e`0 + s(s(s(0)))`